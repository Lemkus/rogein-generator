#!/usr/bin/env python3
"""
–¢–µ—Å—Ç OSMnx –Ω–∞–ø—Ä—è–º—É—é –±–µ–∑ Flask —Å–µ—Ä–≤–µ—Ä–∞
"""

import osmnx as ox
import time
import logging

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

def test_osmnx_direct():
    """–ü—Ä—è–º–æ–π —Ç–µ—Å—Ç OSMnx –±–µ–∑ —Å–µ—Ä–≤–µ—Ä–∞"""
    try:
        logger.info("=== –ü–†–Ø–ú–û–ô –¢–ï–°–¢ OSMnx ===")
        
        # –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è OSMnx
        ox.settings.use_cache = True
        ox.settings.log_console = True
        ox.settings.timeout = 30
        ox.settings.requests_timeout = 30
        
        logger.info(f"OSMnx version: {ox.__version__}")
        logger.info(f"OSMnx settings: use_cache={ox.settings.use_cache}, timeout={ox.settings.timeout}")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –æ—á–µ–Ω—å –º–∞–ª–µ–Ω—å–∫—É—é –æ–±–ª–∞—Å—Ç—å
        test_bbox = (60.11, 30.23, 60.111, 30.231)  # south, west, north, east (100x100–º –ø—Ä–∏–º–µ—Ä–Ω–æ)
        logger.info(f"–¢–µ—Å—Ç–∏—Ä—É–µ–º –∑–∞–≥—Ä—É–∑–∫—É –≥—Ä–∞—Ñ–∞ –¥–ª—è bbox: {test_bbox}")
        
        # –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –≤ —Ñ–æ—Ä–º–∞—Ç OSMnx 2.x
        bbox = tuple([test_bbox[2], test_bbox[0], test_bbox[3], test_bbox[1]])  # north, south, east, west
        logger.info(f"–ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π bbox: {bbox}")
        
        logger.info("üöÄ –ù–∞—á–∏–Ω–∞–µ–º –≤—ã–∑–æ–≤ ox.graph_from_bbox()...")
        start = time.time()
        
        # –ü–æ–ø—Ä–æ–±—É–µ–º –ø—Ä–æ—Å—Ç–æ–π –∑–∞–ø—Ä–æ—Å
        graph = ox.graph_from_bbox(bbox)
        
        elapsed = time.time() - start
        logger.info(f"‚úÖ ox.graph_from_bbox() –∑–∞–≤–µ—Ä—à–µ–Ω –∑–∞ {elapsed:.2f}—Å")
        logger.info(f"‚úÖ –ì—Ä–∞—Ñ –∑–∞–≥—Ä—É–∂–µ–Ω: {len(graph.nodes)} —É–∑–ª–æ–≤, {len(graph.edges)} —Ä—ë–±–µ—Ä")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—é
        edges_gdf = ox.graph_to_gdfs(graph, edges=True, nodes=False)
        logger.info(f"‚úÖ GeoDataFrame —Å–æ–∑–¥–∞–Ω: {len(edges_gdf)} —Ä—ë–±–µ—Ä")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∏–ø—ã –¥–æ—Ä–æ–≥
        highway_types = edges_gdf['highway'].value_counts() if not edges_gdf.empty else {}
        logger.info(f"‚úÖ –¢–∏–ø—ã –¥–æ—Ä–æ–≥: {dict(highway_types)}")
        
        return True
        
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞: {e}", exc_info=True)
        return False

if __name__ == "__main__":
    success = test_osmnx_direct()
    if success:
        print("‚úÖ OSMnx —Ç–µ—Å—Ç –ø—Ä–æ—à–µ–ª —É—Å–ø–µ—à–Ω–æ!")
    else:
        print("‚ùå OSMnx —Ç–µ—Å—Ç –Ω–µ –ø—Ä–æ—à–µ–ª!")
