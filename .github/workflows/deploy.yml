name: Deploy to REG.RU Hosting

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Prepare SSH key (base64)
        run: |
          echo "–î–ª–∏–Ω–∞ base64 –∫–ª—é—á–∞: $(echo "${{ secrets.VPS_SSH_KEY_B64 }}" | wc -c)"
          echo "${{ secrets.VPS_SSH_KEY_B64 }}" | base64 -d > key.pem
          chmod 600 key.pem
          echo "–†–∞–∑–º–µ—Ä –¥–µ–∫–æ–¥–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –∫–ª—é—á–∞: $(wc -c < key.pem)"
          echo "–ù–∞—á–∞–ª–æ –∫–ª—é—á–∞:"
          head -1 key.pem
          echo "–ö–æ–Ω–µ—Ü –∫–ª—é—á–∞:"
          tail -1 key.pem

      - name: Add host to known_hosts
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -H ${{ secrets.VPS_HOST }} >> ~/.ssh/known_hosts

      - name: Deploy over SSH
        env:
          SSH_PORT: ${{ secrets.VPS_SSH_PORT }}
          VPS_PATH: ${{ secrets.VPS_PATH }}
        run: |
          PORT_OPT=${SSH_PORT:+-p $SSH_PORT}
          echo "üîç SSH –ø–∞—Ä–∞–º–µ—Ç—Ä—ã:"
          echo "  Host: ${{ secrets.VPS_HOST }}"
          echo "  User: ${{ secrets.VPS_USER }}"
          echo "  Port: ${{ secrets.VPS_SSH_PORT }}"
          echo "  Path: ${{ secrets.VPS_PATH }}"
          echo "üîç IP –∞–¥—Ä–µ—Å GitHub Actions:"
          curl -s https://ipinfo.io/ip || echo "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å IP"
          echo "üîç –¢–µ—Å—Ç–∏—Ä—É–µ–º SSH —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ..."
          echo "–ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å —Å–µ—Ä–≤–µ—Ä–∞..."
          ping -c 3 ${{ secrets.VPS_HOST }} || echo "Ping –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç"
          
          # –ü—Ä–æ–≤–µ—Ä—è–µ–º SSH —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –Ω–∞ –ø–æ—Ä—Ç—É 22
          echo "–ü—Ä–æ–≤–µ—Ä—è–µ–º SSH —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –Ω–∞ –ø–æ—Ä—Ç—É 22..."
          if timeout 30 ssh -i key.pem -o ConnectTimeout=20 -o ServerAliveInterval=10 -o ServerAliveCountMax=3 -o StrictHostKeyChecking=no -o LogLevel=DEBUG3 ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }} "whoami" 2>&1; then
            echo "‚úÖ SSH —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–∞ –ø–æ—Ä—Ç—É 22"
            export WORKING_SSH_PORT=22
          else
            echo "‚ùå SSH –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–∞ –ø–æ—Ä—Ç—É 22"
            exit 1
          fi
          echo "üîç –ù–∞—á–∏–Ω–∞–µ–º –¥–µ–ø–ª–æ–π —á–µ—Ä–µ–∑ SSH –Ω–∞ –ø–æ—Ä—Ç—É $WORKING_SSH_PORT..."
          echo "–ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç—å —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è..."
          ssh -i key.pem -p $WORKING_SSH_PORT -o ConnectTimeout=60 -o ServerAliveInterval=15 -o ServerAliveCountMax=3 -o StrictHostKeyChecking=no ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }} "whoami"
          
          echo "üîç –ù–∞—á–∏–Ω–∞–µ–º –æ—Å–Ω–æ–≤–Ω–æ–π –¥–µ–ø–ª–æ–π..."
          ssh -i key.pem -p $WORKING_SSH_PORT -o ConnectTimeout=60 -o ServerAliveInterval=15 -o ServerAliveCountMax=3 -o StrictHostKeyChecking=no ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }} "
            set +e  # –ù–µ –ø—Ä–µ—Ä—ã–≤–∞—Ç—å –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –ø—Ä–∏ –æ—à–∏–±–∫–∞—Ö
            echo '=== –ù–∞—á–∏–Ω–∞–µ–º –¥–µ–ø–ª–æ–π –Ω–∞ REG.RU —Ö–æ—Å—Ç–∏–Ω–≥ ==='
            echo '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: \$(whoami)'
            echo 'UID: \$(id -u)'
            echo '–¢–µ–∫—É—â–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: \$(pwd)'
            
            # –°–æ–∑–¥–∞—Ç—å –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –ø—Ä–æ–µ–∫—Ç–∞
            mkdir -p \"$VPS_PATH\"
            cd \"$VPS_PATH\"
            echo '–†–∞–±–æ—á–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: \$(pwd)'
            
            # –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é
            echo '=== –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ ==='
            pip3 install --user uvicorn fastapi flask requests
            
            # –ö–ª–æ–Ω–∏—Ä–æ–≤–∞—Ç—å –∏–ª–∏ –æ–±–Ω–æ–≤–∏—Ç—å –∫–æ–¥
            if [ ! -d \".git\" ]; then
              echo '=== –ö–ª–æ–Ω–∏—Ä—É–µ–º —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π ==='
              # –ï—Å–ª–∏ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –Ω–µ –ø—É—Å—Ç–∞—è, —Å–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—É—é –ø–∞–ø–∫—É
              if [ \"\$(ls -A .)\" ]; then
                echo '–î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –Ω–µ –ø—É—Å—Ç–∞—è, —Å–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—É—é –ø–∞–ø–∫—É'
                mkdir -p temp_repo
                cd temp_repo
                git clone https://github.com/${{ github.repository }} .
                # –ö–æ–ø–∏—Ä—É–µ–º —Ñ–∞–π–ª—ã –æ–±—Ä–∞—Ç–Ω–æ
                cp -r * ../
                cp -r .git ../
                cd ..
                rm -rf temp_repo
              else
                git clone https://github.com/${{ github.repository }} .
              fi
            else
              echo '=== –û–±–Ω–æ–≤–ª—è–µ–º –∫–æ–¥ ==='
              git fetch --all
              git reset --hard origin/main
            fi
            
            # –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
            echo '=== –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ ==='
            python3 -c 'import uvicorn, fastapi, flask; print(\"–ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ OK\")' || echo '–ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –ù–ï –£–°–¢–ê–ù–û–í–õ–ï–ù–´'
            
            # –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç—Ä—É–∫—Ç—É—Ä—É –ø—Ä–æ–µ–∫—Ç–∞
            echo '=== –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É –ø—Ä–æ–µ–∫—Ç–∞ ==='
            ls -la
            if [ -d \"backend/\" ]; then
              echo 'backend/ –Ω–∞–π–¥–µ–Ω'
              ls -la backend/
              if [ -d \"backend/app/\" ]; then
                echo 'backend/app/ –Ω–∞–π–¥–µ–Ω'
                ls -la backend/app/
              else
                echo 'backend/app/ –Ω–µ –Ω–∞–π–¥–µ–Ω'
              fi
            else
              echo 'backend/ –Ω–µ –Ω–∞–π–¥–µ–Ω - –ø–æ–ø—Ä–æ–±—É–µ–º —Å–æ–∑–¥–∞—Ç—å —Å—Ç—Ä—É–∫—Ç—É—Ä—É'
              mkdir -p backend/app
              echo '–°–æ–∑–¥–∞–Ω–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ backend/app/'
            fi
            
            # –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Å—Ç–∞—Ä—ã–µ –ø—Ä–æ—Ü–µ—Å—Å—ã
            echo '=== –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å—Ç–∞—Ä—ã–µ –ø—Ä–æ—Ü–µ—Å—Å—ã ==='
            echo '–ò—â–µ–º –ø—Ä–æ—Ü–µ—Å—Å—ã uvicorn...'
            ps aux | grep uvicorn | grep -v grep || echo 'uvicorn –ø—Ä–æ—Ü–µ—Å—Å—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã'
            echo '–ò—â–µ–º –ø—Ä–æ—Ü–µ—Å—Å—ã backend_simple...'
            ps aux | grep backend_simple | grep -v grep || echo 'backend_simple –ø—Ä–æ—Ü–µ—Å—Å—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã'
            
            echo '–û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º uvicorn –ø—Ä–æ—Ü–µ—Å—Å—ã...'
            pkill -f 'uvicorn.*simple_main' 2>/dev/null || echo 'uvicorn –ø—Ä–æ—Ü–µ—Å—Å—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏'
            echo '–û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º backend_simple –ø—Ä–æ—Ü–µ—Å—Å—ã...'
            pkill -f 'backend_simple.py' 2>/dev/null || echo 'backend_simple –ø—Ä–æ—Ü–µ—Å—Å—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏'
            
            echo '–ñ–¥–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –ø—Ä–æ—Ü–µ—Å—Å–æ–≤...'
            sleep 3
            
            echo '–ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø—Ä–æ—Ü–µ—Å—Å—ã –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã...'
            ps aux | grep -E '(uvicorn|backend_simple)' | grep -v grep || echo '–í—Å–µ –ø—Ä–æ—Ü–µ—Å—Å—ã –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã'
            
            # –°–æ–∑–¥–∞–µ–º Flask –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è REG.RU (Passenger WSGI)
            echo '=== –°–æ–∑–¥–∞–µ–º Flask –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è REG.RU ==='
            
            # –°–æ–∑–¥–∞–µ–º –æ—Å–Ω–æ–≤–Ω–æ–π Flask —Ñ–∞–π–ª
            echo 'from flask import Flask, send_from_directory, jsonify' > hello.py
            echo 'import os' >> hello.py
            echo '' >> hello.py
            echo 'application = Flask(__name__)' >> hello.py
            echo '' >> hello.py
            echo '@application.route(\"/\")' >> hello.py
            echo 'def index():' >> hello.py
            echo '    return send_from_directory(\".\", \"index.html\")' >> hello.py
            echo '' >> hello.py
            echo '@application.route(\"/<path:filename>\")' >> hello.py
            echo 'def static_files(filename):' >> hello.py
            echo '    return send_from_directory(\".\", filename)' >> hello.py
            echo '' >> hello.py
            echo '@application.route(\"/api/health\")' >> hello.py
            echo 'def health():' >> hello.py
            echo '    return jsonify({\"status\": \"ok\", \"message\": \"TrailSpot API —Ä–∞–±–æ—Ç–∞–µ—Ç\"})' >> hello.py
            echo '' >> hello.py
            echo 'if __name__ == \"__main__\":' >> hello.py
            echo '    application.run(host=\"0.0.0.0\")' >> hello.py

            # –°–æ–∑–¥–∞–µ–º passenger_wsgi.py
            echo 'import sys' > passenger_wsgi.py
            echo 'import os' >> passenger_wsgi.py
            echo 'INTERP = os.path.expanduser(\"/var/www/u3288673/data/venv/bin/python\")' >> passenger_wsgi.py
            echo 'if sys.executable != INTERP:' >> passenger_wsgi.py
            echo '    os.execl(INTERP, INTERP, *sys.argv)' >> passenger_wsgi.py
            echo 'sys.path.append(os.getcwd())' >> passenger_wsgi.py
            echo 'from hello import application' >> passenger_wsgi.py

            echo 'Flask –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–æ –¥–ª—è Passenger WSGI'
            
            # –ó–∞–ø—É—Å—Ç–∏—Ç—å —Ç–æ–ª—å–∫–æ Server Overpass API (Flask —Ä–∞–±–æ—Ç–∞–µ—Ç —á–µ—Ä–µ–∑ Passenger)
            echo '=== –ó–∞–ø—É—Å–∫–∞–µ–º Server Overpass API ==='
            echo '–ó–∞–ø—É—Å–∫–∞–µ–º Server Overpass API –Ω–∞ –ø–æ—Ä—Ç—É 5000...'
            nohup python3 backend_simple.py > /tmp/overpass.log 2>&1 &
            OVERPASS_PID=\$!
            echo \"Server Overpass API –∑–∞–ø—É—â–µ–Ω —Å PID: \$OVERPASS_PID –Ω–∞ –ø–æ—Ä—Ç—É 5000\"
            sleep 3
            
            # –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Ä–∞–±–æ—Ç—É —Å–µ—Ä–≤–∏—Å–æ–≤
            echo '=== –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–±–æ—Ç—É —Å–µ—Ä–≤–∏—Å–æ–≤ ==='
            echo '–ü—Ä–æ—Ü–µ—Å—Å—ã Python:'
            ps aux | grep python | grep -v grep || echo 'Python –ø—Ä–æ—Ü–µ—Å—Å—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã'
            
            echo '=== –ü—Ä–æ–≤–µ—Ä—è–µ–º Server Overpass API ==='
            curl -s http://127.0.0.1:5000/api/health || echo 'Server Overpass API –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç'
            
            echo '=== –õ–æ–≥–∏ Server Overpass API ==='
            cat /tmp/overpass.log || echo 'Server Overpass API –ª–æ–≥ –ø—É—Å—Ç'
            
            echo '=== –°–æ–∑–¥–∞–µ–º —Ñ–∞–π–ª –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞ ==='
            touch .restart-app
            echo '–§–∞–π–ª .restart-app —Å–æ–∑–¥–∞–Ω –¥–ª—è –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞ Passenger'
            
            echo \"Deployed Server Overpass API at: http://${{ secrets.VPS_HOST }}:5000/api/health\"
            echo \"TrailSpot website: http://trailspot.app\"
            echo \"TrailSpot API: http://trailspot.app/api/health\"
          "