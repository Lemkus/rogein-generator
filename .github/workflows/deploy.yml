name: Deploy to VPS

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Prepare SSH key (base64)
        run: |
          echo "${{ secrets.VPS_SSH_KEY_B64 }}" | base64 -d > key.pem
          chmod 600 key.pem

      - name: Add host to known_hosts
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -H ${{ secrets.VPS_HOST }} >> ~/.ssh/known_hosts

      - name: SSH debug (verbose)
        env:
          SSH_PORT: ${{ secrets.VPS_SSH_PORT }}
        run: |
          PORT_OPT=${SSH_PORT:+-p $SSH_PORT}
          ssh -vvv -i key.pem -o StrictHostKeyChecking=no $PORT_OPT ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }} "echo 'SSH OK'"

      - name: Deploy over SSH
        env:
          SSH_PORT: ${{ secrets.VPS_SSH_PORT }}
          VPS_PATH: ${{ secrets.VPS_PATH }}
        run: |
          PORT_OPT=${SSH_PORT:+-p $SSH_PORT}
          ssh -i key.pem $PORT_OPT ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }} "
            set -e
            echo '=== Начинаем деплой ==='
            echo 'Пользователь: $(whoami)'
            echo 'UID: $(id -u)'
            echo 'Права на /tmp: $(ls -ld /tmp)'
            
            # подготовить каталог с кодом
            mkdir -p \"$VPS_PATH\"
            if [ ! -d \"$VPS_PATH/.git\" ]; then
              cd \"$(dirname \"$VPS_PATH\")\"
              if [ -d rogein-generator ]; then rm -rf rogein-generator; fi
              git clone https://github.com/${{ github.repository }} rogein-generator
              mv rogein-generator \"$(basename \"$VPS_PATH\")\"
            fi

            cd \"$VPS_PATH\"
            echo '=== Обновляем код ==='
            git fetch --all
            git reset --hard origin/main
            
            echo '=== Проверяем структуру файлов ==='
            ls -la
            ls -la backend/
            ls -la backend/app/
            
            echo '=== Проверяем Python и зависимости ==='
            python3 --version
            python3 -c 'import uvicorn; print(\"uvicorn OK\")' || echo 'uvicorn НЕ УСТАНОВЛЕН'
            python3 -c 'import fastapi; print(\"fastapi OK\")' || echo 'fastapi НЕ УСТАНОВЛЕН'
            
            echo '=== Устанавливаем зависимости если нужно ==='
            if ! python3 -c 'import uvicorn' 2>/dev/null; then
              echo 'Устанавливаем uvicorn...'
              pip3 install --user uvicorn fastapi
            fi
            
            echo '=== Проверяем модуль ==='
            cd backend
            python3 -c 'import app.simple_main; print(\"Модуль app.simple_main найден\")' || echo 'МОДУЛЬ НЕ НАЙДЕН'

            echo '=== Останавливаем старые процессы ==='
            # Пытаемся найти и остановить процессы uvicorn на порту 6002
            PIDS=$(pgrep -f 'uvicorn.*6002' 2>/dev/null || true)
            if [ -n "$PIDS" ]; then
              echo "Найдены процессы: $PIDS"
              for pid in $PIDS; do
                echo "Останавливаем процесс $pid"
                kill -TERM $pid 2>/dev/null || true
              done
              sleep 3
              # Проверяем, остановились ли процессы
              REMAINING=$(pgrep -f 'uvicorn.*6002' 2>/dev/null || true)
              if [ -n "$REMAINING" ]; then
                echo "Принудительно останавливаем оставшиеся процессы: $REMAINING"
                kill -KILL $REMAINING 2>/dev/null || true
              fi
            else
              echo "Процессы uvicorn на порту 6002 не найдены"
            fi
            sleep 2
            
            echo '=== Запускаем FastAPI ==='
            nohup python3 -m uvicorn app.simple_main:app --host 0.0.0.0 --port 6002 > /tmp/fastapi.log 2>&1 &
            sleep 2
            
            echo '=== Проверяем запуск ==='
            ps aux | grep uvicorn || echo 'Процесс не найден'
            curl -s http://localhost:6002/health || echo 'Сервер не отвечает'
            
            echo '=== Логи запуска ==='
            cat /tmp/fastapi.log || echo 'Лог пуст'
            
            echo 'Deployed at: http://${{ secrets.VPS_HOST }}:6002/health'
          "