name: Deploy to VPS

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Prepare SSH key (base64)
        run: |
          echo "${{ secrets.VPS_SSH_KEY_B64 }}" | base64 -d > key.pem
          chmod 600 key.pem

      - name: Add host to known_hosts
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -H ${{ secrets.VPS_HOST }} >> ~/.ssh/known_hosts

      - name: SSH debug (verbose)
        env:
          SSH_PORT: ${{ secrets.VPS_SSH_PORT }}
        run: |
          PORT_OPT=${SSH_PORT:+-p $SSH_PORT}
          ssh -vvv -i key.pem -o StrictHostKeyChecking=no $PORT_OPT ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }} "echo 'SSH OK'"

      - name: Deploy over SSH
        env:
          SSH_PORT: ${{ secrets.VPS_SSH_PORT }}
          VPS_PATH: ${{ secrets.VPS_PATH }}
        run: |
          PORT_OPT=${SSH_PORT:+-p $SSH_PORT}
          echo "üîç SSH –ø–∞—Ä–∞–º–µ—Ç—Ä—ã:"
          echo "  Host: ${{ secrets.VPS_HOST }}"
          echo "  User: ${{ secrets.VPS_USER }}"
          echo "  Port: ${{ secrets.VPS_SSH_PORT }}"
          echo "  Key file exists: $(ls -la key.pem)"
          echo "üîç –¢–µ—Å—Ç–∏—Ä—É–µ–º SSH —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ..."
          ssh -i key.pem $PORT_OPT ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }} "echo 'SSH —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Ä–∞–±–æ—Ç–∞–µ—Ç!'"
          echo "üîç –ù–∞—á–∏–Ω–∞–µ–º –¥–µ–ø–ª–æ–π —á–µ—Ä–µ–∑ SSH..."
          ssh -i key.pem $PORT_OPT ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }} "
            set -e
            echo '=== –ù–∞—á–∏–Ω–∞–µ–º –¥–µ–ø–ª–æ–π ==='
            echo '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: \$(whoami)'
            echo 'UID: \$(id -u)'
            echo '–ü—Ä–∞–≤–∞ –Ω–∞ /tmp: \$(ls -ld /tmp)'
            
            # –ø–æ–¥–≥–æ—Ç–æ–≤–∏—Ç—å –∫–∞—Ç–∞–ª–æ–≥ —Å –∫–æ–¥–æ–º
            mkdir -p \"$VPS_PATH\"
            if [ ! -d \"$VPS_PATH/.git\" ]; then
              cd \"\$(dirname \"$VPS_PATH\")\"
              if [ -d rogein-generator ]; then rm -rf rogein-generator; fi
              git clone https://github.com/${{ github.repository }} rogein-generator
              mv rogein-generator \"\$(basename \"$VPS_PATH\")\"
            fi

            cd \"$VPS_PATH\"
            echo '=== –û–±–Ω–æ–≤–ª—è–µ–º –∫–æ–¥ ==='
            git fetch --all
            git reset --hard origin/main
            
            echo '=== –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Ñ–∞–π–ª–æ–≤ ==='
            ls -la
            ls -la backend/
            ls -la backend/app/
            echo '=== –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥ —Ñ–∞–π–ª—ã ==='
            ls -la index.html || echo 'index.html –Ω–µ –Ω–∞–π–¥–µ–Ω'
            ls -la src/ || echo 'src/ –Ω–µ –Ω–∞–π–¥–µ–Ω'
            
            echo '=== –ü—Ä–æ–≤–µ—Ä—è–µ–º Python –∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ ==='
            python3 --version
            python3 -c 'import uvicorn; print(\"uvicorn OK\")' || echo 'uvicorn –ù–ï –£–°–¢–ê–ù–û–í–õ–ï–ù'
            python3 -c 'import fastapi; print(\"fastapi OK\")' || echo 'fastapi –ù–ï –£–°–¢–ê–ù–û–í–õ–ï–ù'
            
            echo '=== –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –µ—Å–ª–∏ –Ω—É–∂–Ω–æ ==='
            if ! python3 -c 'import uvicorn' 2>/dev/null; then
              echo '–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º uvicorn...'
              pip3 install --user uvicorn fastapi
            fi
            
            echo '=== –ü—Ä–æ–≤–µ—Ä—è–µ–º –º–æ–¥—É–ª—å ==='
            cd backend
            python3 -c 'import app.simple_main; print(\"–ú–æ–¥—É–ª—å app.simple_main –Ω–∞–π–¥–µ–Ω\")' || echo '–ú–û–î–£–õ–¨ –ù–ï –ù–ê–ô–î–ï–ù'

            echo '=== –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å—Ç–∞—Ä—ã–µ –ø—Ä–æ—Ü–µ—Å—Å—ã ==='
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –ø—Ä–æ—Ü–µ—Å—Å—ã uvicorn –ø–æ–¥ —Ç–µ–∫—É—â–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
            CURRENT_USER=\$(whoami)
            echo \"–¢–µ–∫—É—â–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: \$CURRENT_USER\"
            
            # –ò—â–µ–º –ø—Ä–æ—Ü–µ—Å—Å—ã uvicorn –Ω–∞ –ø–æ—Ä—Ç—É 6002 –ø–æ–¥ —Ç–µ–∫—É—â–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
            Uvicorn_PROCESSES=\$(pgrep -f 'uvicorn.*6002' 2>/dev/null || true)
            if [ -n \"\$Uvicorn_PROCESSES\" ]; then
              echo \"–ù–∞–π–¥–µ–Ω—ã –ø—Ä–æ—Ü–µ—Å—Å—ã uvicorn: \$Uvicorn_PROCESSES\"
              echo \"–ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–ª–∞–¥–µ–ª—å—Ü–µ–≤ –ø—Ä–æ—Ü–µ—Å—Å–æ–≤:\"
              
              # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∂–¥—ã–π –ø—Ä–æ—Ü–µ—Å—Å –∏ –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–æ–ª—å–∫–æ —Å–≤–æ–∏
              for pid in \$Uvicorn_PROCESSES; do
                PROCESS_USER=\$(ps -o user= -p \$pid 2>/dev/null || echo \"unknown\")
                echo \"–ü—Ä–æ—Ü–µ—Å—Å \$pid –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–∏—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é: \$PROCESS_USER\"
                
                if [ \"\$PROCESS_USER\" = \"\$CURRENT_USER\" ]; then
                  echo \"–û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–≤–æ–π –ø—Ä–æ—Ü–µ—Å—Å \$pid\"
                  echo \"–ü–æ–ø—ã—Ç–∫–∞ 1: SIGTERM\"
                  kill -TERM \$pid 2>&1 || echo \"SIGTERM –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–ª –¥–ª—è \$pid\"
                  sleep 1
                  
                  # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –æ—Å—Ç–∞–Ω–æ–≤–∏–ª—Å—è –ª–∏ –ø—Ä–æ—Ü–µ—Å—Å
                  if ps -p \$pid > /dev/null 2>&1; then
                    echo \"–ü—Ä–æ—Ü–µ—Å—Å \$pid –µ—â–µ —Ä–∞–±–æ—Ç–∞–µ—Ç, –ø—Ä–æ–±—É–µ–º SIGKILL\"
                    kill -KILL \$pid 2>&1 || echo \"SIGKILL –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–ª –¥–ª—è \$pid\"
                  else
                    echo \"–ü—Ä–æ—Ü–µ—Å—Å \$pid —É—Å–ø–µ—à–Ω–æ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω\"
                  fi
                else
                  echo \"–ü—Ä–æ–ø—É—Å–∫–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å \$pid (–ø—Ä–∏–Ω–∞–¥–ª–µ–∂–∏—Ç \$PROCESS_USER)\"
                fi
              done
              sleep 3
              
              # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
              REMAINING=\$(pgrep -f 'uvicorn.*6002' 2>/dev/null || true)
              if [ -n \"\$REMAINING\" ]; then
                echo \"–û—Å—Ç–∞–ª–∏—Å—å –ø—Ä–æ—Ü–µ—Å—Å—ã: \$REMAINING\"
              else
                echo \"–í—Å–µ —Å–≤–æ–∏ –ø—Ä–æ—Ü–µ—Å—Å—ã uvicorn –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã\"
              fi
            else
              echo \"–ü—Ä–æ—Ü–µ—Å—Å—ã uvicorn –Ω–∞ –ø–æ—Ä—Ç—É 6002 –Ω–µ –Ω–∞–π–¥–µ–Ω—ã\"
            fi
            sleep 2
            
            echo '=== –ó–∞–ø—É—Å–∫–∞–µ–º FastAPI ==='
            echo '–¢–µ–∫—É—â–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: \$(pwd)'
            echo '–°–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ç–µ–∫—É—â–µ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏: \$(ls -la)'
            echo '–ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤ backend/'
            cd backend
            echo '–¢–µ–∫—É—â–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –ø–æ—Å–ª–µ cd backend: \$(pwd)'
            echo '–°–æ–¥–µ—Ä–∂–∏–º–æ–µ backend/: \$(ls -la)'
            echo '–°–æ–¥–µ—Ä–∂–∏–º–æ–µ backend/app/: \$(ls -la app/)'
            
            nohup python3 -m uvicorn app.simple_main:app --host 0.0.0.0 --port 6002 > /tmp/fastapi.log 2>&1 &
            sleep 3
            
            echo '=== –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–ø—É—Å–∫ ==='
            ps aux | grep uvicorn || echo '–ü—Ä–æ—Ü–µ—Å—Å –Ω–µ –Ω–∞–π–¥–µ–Ω'
            curl -s http://localhost:6002/test || echo '–¢–µ—Å—Ç–æ–≤—ã–π –º–∞—Ä—à—Ä—É—Ç –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç'
            curl -s http://localhost:6002/health || echo 'Health check –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç'
            
            echo '=== –õ–æ–≥–∏ –∑–∞–ø—É—Å–∫–∞ ==='
            cat /tmp/fastapi.log || echo '–õ–æ–≥ –ø—É—Å—Ç'
            
            echo 'Deployed at: http://${{ secrets.VPS_HOST }}:6002/health'
          "